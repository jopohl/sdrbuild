name: windows

on:
  push:
    branches: [ master ]
    tags: [ "v*" ]
  pull_request:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        architecture: [x86, x64]
    env:
      ARCH: ${{ matrix.architecture }}
      ARCH_NUM: "${{ matrix.architecture == 'x64' && '64' || '32' }}"
      CMAKE_ARCH: "${{ matrix.architecture == 'x64' && 'x64' || 'Win32' }}"

    steps:
      - run: choco install wget sed innoextract --no-progress

      - name: Setup libusb
        run: |
          wget -nv https://github.com/libusb/libusb/releases/download/v1.0.25/libusb-1.0.25.7z
          7z x libusb-1.0.25.7z -olibusb > /dev/null
          ls $GITHUB_WORKSPACE/libusb

      - name: Setup pthreads
        run: |
          wget -nv https://www.mirrorservice.org/sites/sourceware.org/pub/pthreads-win32/pthreads-w32-2-9-1-release.zip
          7z x pthreads-w32-2-9-1-release.zip -opthreads > /dev/null
          ls $GITHUB_WORKSPACE/pthreads

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.architecture }}

      - name: Setup FFTW
        run: |
          wget -nv https://fftw.org/pub/fftw/fftw-3.3.5-dll$ARCH_NUM.zip
          7z x fftw-3.3.5-dll$ARCH_NUM.zip -offtw > /dev/null
          cd fftw
          lib /machine:$ARCH /def:libfftw3-3.def
          lib /machine:$ARCH /def:libfftw3f-3.def
          lib /machine:$ARCH /def:libfftw3l-3.def
          ls $GITHUB_WORKSPACE/fftw

      - name: Setup FX3SDK
        run: |
          wget -nv http://downloads.myriadrf.org/project/limesuite/appveyor/FX3SDK.zip
          7z x FX3SDK.zip -ofx3sdk > /dev/null
          ls $GITHUB_WORKSPACE/fx3sdk

      - name: AirSpy build
        run: |
          git clone --depth 1 https://github.com/airspy/airspyone_host
          mkdir airspyone_host/build && cd airspyone_host/build
          cmake -A $CMAKE_ARCH -DCMAKE_BUILD_TYPE=Release \
                -DLIBUSB_LIBRARIES=$GITHUB_WORKSPACE/libusb/VS2019/MS$ARCH_NUM/Release/lib/libusb-1.0.lib \
                -DLIBUSB_INCLUDE_DIR=$GITHUB_WORKSPACE/libusb/include/libusb-1.0 \
                -DTHREADS_PTHREADS_INCLUDE_DIR=$GITHUB_WORKSPACE/pthreads/Pre-built.2/include \
                -DTHREADS_PTHREADS_WIN32_LIBRARY=$GITHUB_WORKSPACE/pthreads/Pre-built.2/lib/$ARCH/pthreadVC2.lib ..
          cmake --build . --parallel $NUMBER_OF_PROCESSORS --config Release
          cmake --install . --prefix $GITHUB_WORKSPACE/dist --config Release
          echo "* AirSpy: `git show --format='%h (%s, %as)' --no-patch`" >> $GITHUB_WORKSPACE/release_notes.md

      - name: BladeRF download
        run: |
          wget -nv -O bladerf.exe -nv https://www.nuand.com/windows_installers/bladeRF-win-installer-2021.03.exe
          innoextract bladerf.exe -d bladerf
          cp bladerf/app/include/* dist/include
          cp bladerf/app/$ARCH/* dist
          echo "* BladeRF: 2021.03" >> $GITHUB_WORKSPACE/release_notes.md

      - name: HackRF build
        run: |
          git clone --depth 1 https://github.com/greatscottgadgets/hackrf
          mkdir hackrf/host/build && cd hackrf/host/build
          cmake -A $CMAKE_ARCH -DCMAKE_BUILD_TYPE=Release\
                -DLIBUSB_LIBRARIES=$GITHUB_WORKSPACE/libusb/VS2019/MS$ARCH_NUM/Release/lib/libusb-1.0.lib \
                -DLIBUSB_INCLUDE_DIR=$GITHUB_WORKSPACE/libusb/include/libusb-1.0 \
                -DTHREADS_PTHREADS_INCLUDE_DIR=$GITHUB_WORKSPACE/pthreads/Pre-built.2/include \
                -DTHREADS_PTHREADS_WIN32_LIBRARY=$GITHUB_WORKSPACE/pthreads/Pre-built.2/lib/$ARCH/pthreadVC2.lib \
                -DFFTW_INCLUDES=$GITHUB_WORKSPACE/fftw \
                -DFFTW_LIBRARIES=$GITHUB_WORKSPACE/fftw/libfftw3f-3.lib ..
          cmake --build . --parallel $NUMBER_OF_PROCESSORS --config Release
          cmake --install . --prefix $GITHUB_WORKSPACE/dist --config Release
          echo "* HackRF: `git show --format='%h (%s, %as)' --no-patch`" >> $GITHUB_WORKSPACE/release_notes.md

      - name: LimeSuite build
        run: |
          git clone https://github.com/myriadrf/LimeSuite && cd LimeSuite
          git show --format="%h (%s, %as)" --no-patch
          mkdir builddir && cd builddir
          cmake -A $CMAKE_ARCH \
                -DCMAKE_BUILD_TYPE=Release \
                -DENABLE_GUI=OFF \
                -DFX3_SDK_PATH=$GITHUB_WORKSPACE/fx3sdk \
                ..
          cmake --build . --parallel $NUMBER_OF_PROCESSORS --config Release
          cmake --install . --prefix $GITHUB_WORKSPACE/dist --config Release
          echo "* LimeSuite: `git show --format='%h (%s, %as)' --no-patch`" >> $GITHUB_WORKSPACE/release_notes.md


      - name: RTL-SDR build
        run: |
          git clone --depth 1 https://github.com/osmocom/rtl-sdr
          mkdir rtl-sdr/build && cd rtl-sdr/build
          cmake -A $CMAKE_ARCH -DCMAKE_BUILD_TYPE=Release\
                -DLIBUSB_LIBRARIES=$GITHUB_WORKSPACE/libusb/VS2019/MS$ARCH_NUM/Release/lib/libusb-1.0.lib \
                -DLIBUSB_INCLUDE_DIRS=$GITHUB_WORKSPACE/libusb/include/libusb-1.0 \
                -DTHREADS_PTHREADS_INCLUDE_DIR=$GITHUB_WORKSPACE/pthreads/Pre-built.2/include \
                -DTHREADS_PTHREADS_LIBRARY=$GITHUB_WORKSPACE/pthreads/Pre-built.2/lib/$ARCH/pthreadVC2.lib ..
          cmake --build . --parallel $NUMBER_OF_PROCESSORS --config Release
          cmake --install . --prefix $GITHUB_WORKSPACE/dist --config Release
          echo "* RTL-SDR: `git show --format='%h (%s, %as)' --no-patch`" >> $GITHUB_WORKSPACE/release_notes.md

      - name: PlutoSDR download
        run: |
          mkdir iio && cd iio
          wget -nv -O iio.zip https://github.com/analogdevicesinc/libiio/releases/download/v0.23/Windows-VS-16-2019-$CMAKE_ARCH.zip
          7z x iio.zip > /dev/null
          cp Windows-VS-16-2019-$CMAKE_ARCH/* ../dist/
          mv ../dist/libiio.lib ../dist/iio.lib
          mv ../dist/iio.h ../dist/include
          echo "* IIO: 0.23" >> $GITHUB_WORKSPACE/release_notes.md

      - name: SDRPlay download
        run: |
          mkdir sdrplay && cd sdrplay
          wget -nv -O sdrplay.exe https://www.sdrplay.com/software/SDRplay_RSP_API-Windows-2.13.1.exe
          innoextract sdrplay.exe
          cp app/API/inc/* ../dist/include
          mv ../dist/include/mir_sdr.h ../dist/include/mirsdrapi-rsp.h
          cp app/API/$ARCH/* ../dist
          echo "* SDRPlay: 2.13.1" >> $GITHUB_WORKSPACE/release_notes.md

      - name: UHD download
        run: |
          mkdir uhd && cd uhd
          wget -nv -O uhd.exe https://files.ettus.com/binaries/uhd/latest_release/4.1.0.5/Windows-10-x64/uhd_4.1.0.5-release_Win${ARCH}_VS2019.exe
          7z x uhd.exe
          cp bin/uhd.dll ../dist
          cp lib/uhd.lib ../dist
          cp -r include/* ../dist/include/
          echo "* UHD: 4.1.0.5" >> $GITHUB_WORKSPACE/release_notes.md
          cat $GITHUB_WORKSPACE/release_notes.md

      - name: Package
        run: |
          mv dist/lib/* dist/
          mv dist/bin/* dist/
          rm -rf dist/bin dist/lib dist/cmake dist/pkgconfig
          rm dist/*.exe

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
          architecture: ${{ matrix.architecture }}

      - name: Check native backends
        run: |
          git clone --depth 1 https://github.com/jopohl/urh && cd urh
          mkdir src/urh/dev/native/lib/shared
          cp -r ../dist/* src/urh/dev/native/lib/shared/
          python --version
          python -m pip install -r data/requirements.txt
          python setup.py build_ext --inplace
          python -m pip install .
          python data/check_native_backends.py

      - uses: actions/upload-artifact@v2
        with:
          name: win-${{ matrix.architecture }}
          path: dist

      - name: Create zip
        run: 7z a -tzip win-$ARCH.zip "./dist/*"

      - uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: "win-*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          bodyFile: "release_notes.md"
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
